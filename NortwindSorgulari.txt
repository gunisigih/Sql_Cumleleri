--CREATE TABLE employee
--  (
--      id INT PRIMARY KEY,
--      name VARCHAR(50) NOT NULL,
--      gender VARCHAR(50) NOT NULL,
--      salary INT NOT NULL,
--      department VARCHAR(50) NOT NULL
--   )

--   INSERT INTO employee
--  VALUES
--  (1, 'David', 'Male', 5000, 'Sales'),
--  (2, 'Jim', 'Female', 6000, 'HR'),
--  (3, 'Kate', 'Female', 7500, 'IT'),
--  (4, 'Will', 'Male', 6500, 'Marketing'),
--  (5, 'Shane', 'Female', 5500, 'Finance'),
--  (6, 'Shed', 'Male', 8000, 'Sales'),
--  (7, 'Vik', 'Male', 7200, 'HR'),
--  (8, 'Vince', 'Female', 6600, 'IT'),
--  (9, 'Jane', 'Female', 5400, 'Marketing'),
--  (10, 'Laura', 'Female', 6300, 'Finance'),
--  (11, 'Mac', 'Male', 5700, 'Sales'),
--  (12, 'Pat', 'Male', 7000, 'HR'),
--  (13, 'Julie', 'Female', 7100, 'IT'),
--  (14, 'Elice', 'Female', 6800,'Marketing'),
--  (15, 'Wayne', 'Male', 5000, 'Finance')


  --SELECT department, sum(salary) as Salary_Sum
  --FROM employee
  --GROUP BY department

  -- SELECT coalesce (department, 'All Departments') AS Department,
  --sum(salary) as Salary_Sum
  --FROM employee
  --GROUP BY ROLLUP (department)

  --SELECT coalesce (department, 'All Departments') AS Department,
  --coalesce (gender,'All Genders') AS Gender,
  --sum(salary) as Salary_Sum
  --FROM employee
  --GROUP BY ROLLUP (department, gender)

  --SELECT
  --coalesce (department, 'All Departments') AS Department,
  --coalesce (gender,'All Genders') AS Gender,
  --sum(salary) as Salary_Sum
  --FROM employee
  --GROUP BY CUBE (department, gender)

  --SELECT  a.ReportsTo ,  a.FirstName , a.LastName , b.ReportsTo, b.FirstName , b.LastName FROM Employees a
  --INNER JOIN Employees b ON a.EmployeeID=b.ReportsTo
  
  --GROUP BY  a.ReportsTo ,a.FirstName , a.LastName ,  b.ReportsTo, b.FirstName , b.LastName
  

  --SELECT TOP 3  c.CompanyName , p.ProductName  , p.UnitPrice FROM Products AS p
  --INNER JOIN [Order Details] AS od ON p.ProductID=od.ProductID
  --INNER JOIN Orders AS o  ON o.OrderID = od.OrderID
  --INNER JOIN Customers AS c ON c.CustomerID = o.CustomerID
  ----GROUP BY p.ProductName , c.CompanyName , p.UnitPrice
  --ORDER BY p.UnitPrice DESC

  --SELECT o.OrderID , s.CompanyName , o.OrderDate FROM Orders AS o 
  --INNER JOIN Shippers AS s ON o.ShipVia = s.ShipperID
   
  --WHERE (o.OrderDate between '1996-01-01' and '1996-12-31') and (s.CompanyName like '%[ip]%' or s.CompanyName like '%[pi]%')
  --ORDER BY o.OrderID DESC 

  --SELECT c.CategoryName , COUNT(p.ProductID) AS [Ürün Sayýsý] ,  SUM(p.UnitPrice) AS [Toplam B. Fiyat] ,AVG(p.UnitPrice) AS [Fiyat B. Ortalamasý]  FROM Products AS p
  --INNER JOIN Categories AS c ON c.CategoryID = p.CategoryID
  --GROUP BY  c.CategoryName 
  --ORDER BY AVG(p.UnitPrice) DESC


  SELECT  c.CategoryName , p.ProductName ,MAX(p.UnitPrice*od.Quantity) AS [Satýþ Tutarý] FROM Categories AS c 
  INNER JOIN Products AS p  ON c.CategoryID = p.CategoryID
  INNER JOIN [Order Details] AS od ON od.ProductID = p.ProductID
  GROUP BY c.CategoryName , p.ProductName
  ORDER BY [Satýþ Tutarý] DESC


  --Eastern regioan kayýtlý çalýþsanlar
  SELECT DISTINCT e.EmployeeID , e.FirstName , e.LastName FROM Employees AS e 
  INNER JOIN EmployeeTerritories AS et ON e.EmployeeID = et.EmployeeID
  INNER JOIN Territories AS t ON et.TerritoryID = t.TerritoryID
  INNER JOIN Region AS r ON r.RegionID = t.RegionID
  WHERE r.RegionDescription = 'Eastern'

  --Þirket adý ve toplam sipariþleri ve toplam sipariþe göre desc sýrala
   
   SELECT c.CompanyName , SUM(od.UnitPrice*Quantity) AS [Toplam Satýþ Tutarý] FROM Customers AS c 
   INNER JOIN Orders AS o ON o.CustomerID = c.CustomerID
   INNER JOIN [Order Details] AS od ON od.OrderID = o.OrderID
   GROUP BY c.CompanyName
   ORDER BY [Toplam Satýþ Tutarý] DESC

   --Hangi þirket hangi ürünü ne kadar aldý?

   SELECT  c.CompanyName , p.ProductName , SUM(od.Quantity) AS [Toplam Sipariþ Adedi] FROM Customers AS c
   INNER JOIN Orders AS o ON c.CustomerID = o.CustomerID
   INNER JOIN [Order Details] AS od ON od.OrderID = o.OrderID
   INNER JOIN Products AS p ON p.ProductID = od.ProductID
   GROUP BY c.CompanyName , p.ProductName
   ORDER BY [Toplam Sipariþ Adedi]

   --En çok satýþ ilk 3 employee yazdýr

   SELECT  TOP 3 e.EmployeeID , SUM(od.Quantity) AS [Elemanýn satýþ miktarý] , 200 AS [Prim] FROM Employees AS e 
   INNER JOIN Orders AS o ON e.EmployeeID = o.EmployeeID
   INNER JOIN [Order Details] AS od ON o.OrderID = od.OrderID
   GROUP BY e.EmployeeID 

   ORDER BY SUM(od.Quantity)

   --Hangi ülke hangi categoryi en çok satmýþ?


   --Kismeye rapor vermeyen çalýþanlarýn hangi ülkeye ve o ülkeye kaç adet satýþ yaptýðýný gösteriniz.

   SELECT e.EmployeeID , e.FirstName , e.LastName , c.Country , SUM(od.Quantity) AS [TOTAL SALES] FROM Employees AS e
   INNER JOIN Orders AS o ON o.EmployeeID=e.EmployeeID
   INNER JOIN Customers AS c ON c.CustomerID=o.CustomerID
   INNER JOIN [Order Details] AS od ON od.OrderID = o.OrderID
   WHERE e.ReportsTo is NULL 
   GROUP BY e.EmployeeID , e.FirstName , e.LastName , c.Country 

  --2)	Products tablosunda “UnitPrice” larý ortalamanýn üzerinde olan ürün adlarý nelerdir ve hangi ülkelere satýlmýþtýr?
  

  SELECT p.ProductName , c.Country , p.UnitPrice   FROM Customers AS c
  INNER JOIN Orders AS o 
  ON o.CustomerID = c.CustomerID
  INNER JOIN [Order Details] AS od 
  ON od.OrderID = o.OrderID
  INNER JOIN Products AS p 
  ON p.ProductID = od.ProductID
  WHERE p.UnitPrice > (SELECT AVG(UnitPrice) FROM Products)
  GROUP BY p.ProductName , c.Country , p.UnitPrice
  ORDER BY p.UnitPrice
