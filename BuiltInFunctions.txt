--BUILT IN FUNCTIONS
--Karakter Fonk.

SELECT LOWER(firstname) from Employees

SELECT FirstName + ' ' + LastName from Employees

SELECT CONCAT(FirstName , ' ' , LastName) from Employees

SELECT FirstName ,LEN(FirstName) , LastName , LEN(LastName) from Employees

SELECT SUBSTRING(FirstName , 1 ,3) from Employees

SELECT SUBSTRING(FirstName , 3 ,2) from Employees

--Sayýsal Fonk.

SELECT ROUND(UnitPrice , 1) FROM Products WHERE UnitPrice = 21.35

--SELECT MOD( UnitPrice, UnitsInStock) FROM Products
-- MOD yok yüzdeyle yapýlacak.

--Tarih Fonk.

SELECT GETDATE()

SELECT DATEDIFF(DAY , GETDATE() ,  '2020.02.02')
 
SELECT DATEADD(day , 20 , GETDATE())

SELECT DAY(GETDATE())

SELECT MONTH(GETDATE())


--Convert Yapýsý / Donusturme fonksiyonlarý

SELECT CONVERT(varchar(11) , BirthDate , 102) FROM Employees

SELECT CONVERT(varchar(11) , GETDATE() , 131) FROM Employees


--UDF FUNCTIONS

CREATE FUNCTION Carpma( @Sayi1 INT ,@Sayi2 INT)
RETURNS INT
AS 
BEGIN 
RETURN  (@Sayi1*@Sayi2)
END



SELECT dbo.Carpma(3,2) AS SONUC

--Product tablosundaki tüm ürün fiyatlarýný 5TL arttýr.

CREATE FUNCTION FN_ADD_UNITPRICE(@UNITPRICE INT)
RETURNS INT 
AS
BEGIN
DECLARE @DEGER INT 
SET @DEGER = @UNITPRICE + 5
RETURN @DEGER
END

SELECT dbo.FN_ADD_UNITPRICE(UnitPrice) AS [Eklenmiþ Hali] , UnitPrice FROM Products

--1,2 þeklinde ayýn numarasý girildiðinde Ocak,Þubat,Mart yazdýran Fonksiyon yazýnýz.

CREATE FUNCTION AY_ISIMLERI(@SAYI INT)
RETURNS VARCHAR(20)
AS
BEGIN
RETURN 
(
SELECT CASE @SAYI
WHEN 1 THEN 'Ocak'
WHEN 2 THEN 'Þubat'
WHEN 3 THEN 'Mart'
WHEN 4 THEN 'Nisan'
WHEN 5 THEN 'Mayýs'
WHEN 6 THEN 'Haziran'
WHEN 7 THEN 'Temmuz'
WHEN 8 THEN 'Aðustos'
WHEN 9 THEN 'Eylül'
WHEN 10 THEN 'Ekim'
WHEN 11 THEN 'Kasým'
WHEN 12 THEN 'Aralýk'
ELSE 'Tanýmsýz' 
END 
)
END


SELECT dbo.AY_ISIMLERI(10) AS [AY ADI]



CREATE FUNCTION Kdv_Hesapla2(@Sayi1 FLOAT , @Sayi2 FLOAT)
RETURNS FLOAT
AS
BEGIN
DECLARE @DEGER FLOAT
SET @DEGER = ((@Sayi1*@Sayi2)/100) + @Sayi1
RETURN @DEGER
END

SELECT dbo.Kdv_Hesapla1( 100 , 18 ) AS [KDV'li Fiyat]


SELECT p.ProductName , p.UnitPrice , dbo.Kdv_Hesapla2(UnitPrice , 18)  AS [Kdv'li Fiyat] FROM Products AS p


CREATE FUNCTION FN_SiparisSayisi1(@Sayi1 INT , @Sayi2 INT)
RETURNS INT
AS
BEGIN


RETURN
(
SELECT COUNT(OrderID) FROM Orders 
WHERE EmployeeID = @Sayi1 and YEAR(OrderDate) = @Sayi2
)
END


SELECT dbo.FN_SiparisSayisi1(1 ,1996) AS [Sipariþ Sayýsý]
SELECT dbo.FN_SiparisSayisi1(1 ,1997) AS [Sipariþ Sayýsý]
SELECT dbo.FN_SiparisSayisi1(1 ,1998) AS [Sipariþ Sayýsý]

DROP FUNCTION dbo.Kdv_Hesapla

--RETURNS TABLE FUNCTIONS

CREATE FUNCTION FN_PRODUCT_DETAILS(@CUSTOMER NVARCHAR(10))
RETURNS TABLE
AS
RETURN
(
SELECT p.ProductName , p.UnitPrice , p.UnitsInStock FROM Customers AS c
INNER JOIN Orders AS o ON c.CustomerID = o.CustomerID
INNER JOIN [Order Details] AS od ON o.OrderID = od.OrderID
INNER JOIN Products AS p ON od.ProductID = p.ProductID
WHERE c.CustomerID = @CUSTOMER
)

SELECT * FROM dbo.FN_PRODUCT_DETAILS('Anton') 


CREATE FUNCTION FN_SiparisSayisiTable(@Sayi1 INT , @Sayi2 INT)
RETURNS TABLE
AS
RETURN
(
SELECT e.FirstName , e.LastName , p.ProductName , p.UnitPrice ,p.UnitsInStock FROM Employees AS e
INNER JOIN Orders AS o ON e.EmployeeID = o.EmployeeID
INNER JOIN [Order Details] AS od ON od.OrderID = o.OrderID
INNER JOIN Products As p ON p.ProductID = od.ProductID
WHERE e.EmployeeID = @Sayi1 and YEAR(OrderDate) = @Sayi2
)

SELECT * FROM dbo.FN_SiparisSayisiTable(3 , 1996)


--Sanal Tablo Yaratma

CREATE FUNCTION FN_fonk1(@new_Id int)
RETURNS @PRODUCTS_OF_CUSTOMERS TABLE( ID INT , ProductName NVARCHAR(50) , UnitPrice MONEY)
AS
BEGIN
if(@new_Id < 0)
	INSERT INTO @PRODUCTS_OF_CUSTOMERS SELECT ProductID , ProductName , UnitPrice FROM Products

if(@new_Id > 0)
	INSERT INTO @PRODUCTS_OF_CUSTOMERS SELECT ProductID , ProductName , UnitPrice FROM Products WHERE ProductID = @new_Id

if(@new_Id = 0)
	INSERT INTO @PRODUCTS_OF_CUSTOMERS VALUES(0 , 'Test Ürünü' , 10)
RETURN 
END

SELECT * FROM dbo.FN_fonk1(4) 